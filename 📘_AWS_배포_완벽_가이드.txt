╔═══════════════════════════════════════════════════════════╗
║                                                           ║
║    🚀 펌피(Pumpy) AWS 클라우드 배포 완벽 가이드          ║
║                                                           ║
║    로컬 서버 → AWS 클라우드로 이전하기                   ║
║                                                           ║
╚═══════════════════════════════════════════════════════════╝


안녕하세요! 👋

펌피 앱을 AWS 클라우드로 배포하는 과정을 도와드리겠습니다.
로컬 환경에서 벗어나 24시간 365일 안정적으로 서비스를 운영하세요!


═══════════════════════════════════════════════════════════

📋 준비 상황

✅ AWS 계정 생성 완료
✅ 프로젝트 파일 준비 완료
✅ 자동 배포 스크립트 생성 완료
✅ React Native 앱 준비 완료
✅ GitHub 커밋 완료


═══════════════════════════════════════════════════════════

🎯 배포 개요

【현재 상태】
- 로컬 PC에서 실행
- PC가 켜져 있어야 함
- 같은 Wi-Fi만 접속 가능

【배포 후 상태】
- AWS 클라우드에서 실행
- 24시간 365일 실행
- 전 세계 어디서든 접속 가능
- PC 꺼도 됨!


═══════════════════════════════════════════════════════════

💰 예상 비용

AWS Lightsail (추천):
┌─────────────────────────────────────────────────────────┐
│  💵 첫 3개월: 완전 무료!                               │
│  💵 이후: $5/월 (약 ₩6,500)                           │
│                                                         │
│  포함 내역:                                            │
│  • 1GB RAM, 40GB SSD                                   │
│  • 1TB 데이터 전송                                     │
│  • 고정 IP 주소                                        │
│  • Seoul 리전 (빠른 속도)                              │
└─────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════

🚀 시작하기 (3가지 방법)


【방법 1】 자동 배포 스크립트 사용 (추천!) ⭐
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

난이도: ⭐ 쉬움
소요 시간: 30분

1️⃣  AWS Lightsail 인스턴스 생성
    └─ https://lightsail.aws.amazon.com/
    └─ Ubuntu 22.04, $5 플랜 선택
    └─ 고정 IP 할당

2️⃣  GitHub 코드 다운로드
    └─ git clone https://github.com/BJJTOM/pumpy.git
    └─ (GitHub 푸시가 필요한 경우 아래 명령어 실행)

3️⃣  자동 배포 스크립트 실행
    └─ cd /home/ubuntu/pumpy
    └─ chmod +x deploy_to_aws.sh
    └─ ./deploy_to_aws.sh

4️⃣  완료! 🎉
    └─ 웹사이트: http://YOUR_IP/
    └─ API: http://YOUR_IP/api/


【방법 2】 FileZilla로 직접 업로드
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

난이도: ⭐⭐ 보통
소요 시간: 40분

1️⃣  AWS Lightsail 인스턴스 생성
2️⃣  FileZilla로 파일 업로드
3️⃣  자동 배포 스크립트 실행


【방법 3】 수동 설정 (고급)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

난이도: ⭐⭐⭐ 어려움
소요 시간: 1시간

각 단계를 수동으로 실행
(상세 가이드: AWS_배포_가이드.md 참조)


═══════════════════════════════════════════════════════════

📚 제공되는 가이드 파일

1. ✅_AWS_배포_시작하기.txt (이 파일)
   └─ 빠른 시작 가이드

2. AWS_빠른_시작_가이드.md
   └─ 단계별 상세 설명 (스크린샷 포함)

3. AWS_배포_가이드.md
   └─ 전체 AWS 서비스 비교 및 선택

4. deploy_to_aws.sh
   └─ 자동 배포 스크립트 (핵심!)

5. gym_api/deploy_settings.py
   └─ 프로덕션용 Django 설정

6. gym_api/requirements.txt
   └─ Python 패키지 목록


═══════════════════════════════════════════════════════════

🎬 단계별 가이드 (방법 1: 자동 배포)


【STEP 1】 AWS Lightsail 인스턴스 생성
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  🌐 https://lightsail.aws.amazon.com/ 접속             │
│                                                         │
│  1. "Create instance" 버튼 클릭                        │
│                                                         │
│  2. 설정 선택:                                         │
│     ┌───────────────────────────────────────┐          │
│     │ Region:    Seoul (ap-northeast-2)    │          │
│     │ Platform:  Linux/Unix                │          │
│     │ Blueprint: Ubuntu 22.04 LTS          │          │
│     │ Plan:      $5 USD (1GB RAM)         │          │
│     │ Name:      pumpy-server              │          │
│     └───────────────────────────────────────┘          │
│                                                         │
│  3. "Create instance" 클릭                             │
│                                                         │
│  4. 인스턴스 생성 완료 대기 (약 1분)                   │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 2】 네트워킹 설정
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  1. 생성된 인스턴스 클릭                               │
│                                                         │
│  2. "Networking" 탭 클릭                               │
│                                                         │
│  3. IPv4 Firewall에서 포트 추가:                       │
│     ┌───────────────────────────────────────┐          │
│     │ Application    Port    Protocol       │          │
│     ├───────────────────────────────────────┤          │
│     │ SSH            22      TCP     (기본) │          │
│     │ HTTP           80      TCP     (추가) │          │
│     │ HTTPS          443     TCP     (추가) │          │
│     │ Custom         8000    TCP     (추가) │          │
│     └───────────────────────────────────────┘          │
│                                                         │
│  4. "Create static IP" 클릭                            │
│     └─ 인스턴스에 연결                                 │
│     └─ 이름: pumpy-static-ip                           │
│                                                         │
│  5. 📝 할당된 IP 주소 메모하기!                        │
│     예: 13.124.xxx.xxx                                 │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 3】 GitHub에 코드 푸시 (아직 안 했다면)
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  로컬 PC PowerShell에서:                               │
│                                                         │
│  cd C:\Users\guddn\Downloads\COCO                      │
│  git push origin master                                │
│                                                         │
│  💡 이미 커밋은 완료되었으니 푸시만 하면 됩니다!       │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 4】 서버 접속 및 코드 다운로드
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  1. Lightsail 콘솔에서 인스턴스 클릭                   │
│                                                         │
│  2. "Connect using SSH" 버튼 클릭                      │
│     └─ 브라우저에서 SSH 터미널이 열립니다              │
│                                                         │
│  3. 다음 명령어 입력:                                  │
│                                                         │
│     cd /home/ubuntu                                    │
│     git clone https://github.com/BJJTOM/pumpy.git     │
│                                                         │
│  4. 다운로드 완료 확인:                                │
│                                                         │
│     cd pumpy                                           │
│     ls                                                 │
│                                                         │
│     다음 폴더가 보여야 합니다:                         │
│     • gym_api/                                         │
│     • gym_web/                                         │
│     • deploy_to_aws.sh                                 │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 5】 자동 배포 스크립트 실행 ⭐
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  SSH 터미널에서 계속:                                  │
│                                                         │
│  # 실행 권한 부여                                      │
│  chmod +x deploy_to_aws.sh                             │
│                                                         │
│  # 배포 시작!                                          │
│  ./deploy_to_aws.sh                                    │
│                                                         │
│  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━              │
│                                                         │
│  💡 스크립트가 다음 작업을 자동으로 수행합니다:        │
│                                                         │
│  ✅ [1/10] 시스템 업데이트                             │
│  ✅ [2/10] Python, Node.js, Nginx 설치                 │
│  ✅ [3/10] 프로젝트 디렉토리 설정                      │
│  ✅ [4/10] PostgreSQL 데이터베이스 생성                │
│  ✅ [5/10] Django 백엔드 설정                          │
│  ✅ [6/10] Gunicorn 서비스 시작                        │
│  ✅ [7/10] Next.js 프론트엔드 빌드                     │
│  ✅ [8/10] Nginx 웹서버 설정                           │
│  ✅ [9/10] 방화벽 설정                                 │
│  ✅ [10/10] 서비스 상태 확인                           │
│                                                         │
│  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━              │
│                                                         │
│  ⏱️  예상 소요 시간: 약 15분                          │
│                                                         │
│  ☕ 커피 한 잔 하고 오세요!                           │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 6】 배포 완료 확인
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  스크립트 완료 후 다음과 같이 표시됩니다:              │
│                                                         │
│  ========================================               │
│    🎉 배포 완료!                                       │
│  ========================================               │
│                                                         │
│  웹사이트: http://13.124.xxx.xxx/                      │
│  API:      http://13.124.xxx.xxx/api/                  │
│  관리자:   http://13.124.xxx.xxx/admin/                │
│                                                         │
│  ========================================               │
│                                                         │
│  📝 이 정보를 메모하세요!                              │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 7】 관리자 계정 생성
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  SSH 터미널에서:                                       │
│                                                         │
│  cd /home/ubuntu/pumpy/gym_api                         │
│  source venv/bin/activate                              │
│  python manage.py createsuperuser                      │
│                                                         │
│  다음 정보 입력:                                       │
│  ┌───────────────────────────────────────┐             │
│  │ Username: admin                      │             │
│  │ Email: your@email.com                │             │
│  │ Password: ****                       │             │
│  │ Password (again): ****               │             │
│  └───────────────────────────────────────┘             │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 8】 웹사이트 접속 테스트
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  PC 브라우저에서:                                      │
│                                                         │
│  1. 웹사이트 접속:                                     │
│     http://YOUR_STATIC_IP/                             │
│     └─ 대시보드가 보여야 합니다! ✅                    │
│                                                         │
│  2. API 테스트:                                        │
│     http://YOUR_STATIC_IP/api/members/                 │
│     └─ JSON 데이터가 보여야 합니다! ✅                 │
│                                                         │
│  3. 관리자 페이지:                                     │
│     http://YOUR_STATIC_IP/admin/                       │
│     └─ 로그인 화면이 보여야 합니다! ✅                 │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 9】 React Native 앱 설정
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  로컬 PC에서 API URL 변경:                             │
│                                                         │
│  1. PumpyApp\src\utils\api.ts 파일 열기               │
│                                                         │
│  2. 다음 줄 수정:                                      │
│     return 'http://YOUR_STATIC_IP/api';                │
│     └─ YOUR_STATIC_IP를 실제 IP로 변경                │
│                                                         │
│  3. PumpyApp\src\screens\ServerConfigScreen.tsx 열기   │
│                                                         │
│  4. 35번째 줄 수정:                                    │
│     setServerUrl('http://YOUR_STATIC_IP/api');         │
│                                                         │
└─────────────────────────────────────────────────────────┘


【STEP 10】 APK 재빌드
┌─────────────────────────────────────────────────────────┐
│                                                         │
│  PowerShell에서:                                       │
│                                                         │
│  cd C:\Users\guddn\Downloads\COCO\PumpyApp\android    │
│                                                         │
│  $env:JAVA_HOME = "C:\Program Files\Microsoft\jdk-21.0.8.9-hotspot"  │
│  $env:ANDROID_HOME = "C:\Users\guddn\AppData\Local\Android\Sdk"      │
│                                                         │
│  .\gradlew assembleRelease                             │
│                                                         │
│  Copy-Item "app\build\outputs\apk\release\app-release.apk" `  │
│             -Destination "C:\Users\guddn\Downloads\COCO\Pumpy_AWS.apk" │
│                                                         │
│  ⏱️  빌드 시간: 약 3분                                │
│                                                         │
└─────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════

✅ 배포 완료! 🎉

이제 펌피 앱이 AWS 클라우드에서 실행됩니다!


【배포 전】
❌ PC가 켜져 있어야 함
❌ 같은 Wi-Fi만 가능
❌ 로컬 IP로만 접속
❌ PC 끄면 중단됨


【배포 후】
✅ 24시간 365일 실행
✅ 어디서든 접속 가능
✅ 고정 IP 주소
✅ PC 꺼도 됨!
✅ 안정적인 서비스


═══════════════════════════════════════════════════════════

📱 앱 사용하기

1. Pumpy_AWS.apk를 폰에 설치

2. 앱 실행

3. 서버 설정 화면에서:
   └─ http://YOUR_IP/api 입력
   └─ "연결 테스트 & 저장" 클릭
   
4. 회원가입 또는 로그인

5. 이제 어디서든 사용 가능! 🌍
   └─ Wi-Fi, 4G, 5G 모두 가능
   └─ 집, 헬스장, 카페, 어디든!


═══════════════════════════════════════════════════════════

🔧 서버 관리

【서비스 상태 확인】
sudo systemctl status gunicorn    # Django 백엔드
pm2 status                         # Next.js 프론트엔드
sudo systemctl status nginx        # 웹서버
sudo systemctl status postgresql   # 데이터베이스

【서비스 재시작】
sudo systemctl restart gunicorn
pm2 restart pumpy-web
sudo systemctl restart nginx

【로그 확인】
sudo journalctl -u gunicorn -f    # Django 로그
pm2 logs pumpy-web                 # Next.js 로그
sudo tail -f /var/log/nginx/error.log  # Nginx 로그

【코드 업데이트 (GitHub 사용 시)】
cd /home/ubuntu/pumpy
git pull
cd gym_api
source venv/bin/activate
python manage.py migrate
sudo systemctl restart gunicorn
cd ../gym_web
npm install
npm run build
pm2 restart pumpy-web


═══════════════════════════════════════════════════════════

💡 유용한 팁

【데이터 백업】
# PostgreSQL 백업
pg_dump -U pumpy_user pumpy_db > backup.sql

# 복원
psql -U pumpy_user pumpy_db < backup.sql

【HTTPS 설정 (무료 SSL)】
sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d yourdomain.com

【모니터링】
# 디스크 사용량
df -h

# 메모리 사용량
free -h

# CPU 사용량
top


═══════════════════════════════════════════════════════════

🆘 문제 해결

【502 Bad Gateway】
원인: Django 백엔드가 중단됨
해결: sudo systemctl restart gunicorn

【웹사이트 안 열림】
원인: Nginx 문제
해결: sudo systemctl restart nginx

【API 응답 없음】
원인: Django 오류
해결: sudo journalctl -u gunicorn -n 50

【데이터베이스 연결 오류】
원인: PostgreSQL 중단
해결: sudo systemctl restart postgresql

【배포 스크립트 오류】
원인: 권한 또는 패키지 문제
해결: 각 단계를 수동으로 실행 (AWS_배포_가이드.md 참조)


═══════════════════════════════════════════════════════════

📊 서버 정보 템플릿

┌─────────────────────────────────────────────────────────┐
│  펌피(Pumpy) AWS 서버 정보                             │
├─────────────────────────────────────────────────────────┤
│  공개 IP:   _________________________                  │
│  웹사이트:  http://________________/                   │
│  API:       http://________________/api/               │
│  관리자:    http://________________/admin/             │
│                                                         │
│  SSH 접속:  ssh ubuntu@________________                │
│                                                         │
│  데이터베이스:                                         │
│  • 이름:     pumpy_db                                  │
│  • 사용자:   pumpy_user                                │
│  • 비밀번호: PumpySecure2025!                          │
│                                                         │
│  배포 일시: ____________________                       │
└─────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════

🎯 다음 단계 (선택사항)

1. ⭐ 도메인 연결
   └─ pumpy.com 같은 도메인 구입
   └─ Route 53에서 DNS 설정

2. 🔒 HTTPS 설정
   └─ Let's Encrypt로 무료 SSL
   └─ 보안 연결 (https://)

3. 💾 자동 백업
   └─ 매일 자동 데이터베이스 백업
   └─ S3에 백업 파일 저장

4. 📊 모니터링
   └─ AWS CloudWatch 설정
   └─ 서버 상태 실시간 모니터링

5. 🚀 CI/CD 설정
   └─ GitHub Actions
   └─ 코드 푸시 시 자동 배포


═══════════════════════════════════════════════════════════

💰 월 비용 예상

AWS Lightsail $5 플랜:
┌─────────────────────────────────────────────────────────┐
│  인스턴스:        $5.00                                 │
│  고정 IP:         $0.00 (무료)                         │
│  데이터 전송:     $0.00 (1TB 포함)                     │
│  ─────────────────────────────────────────              │
│  총 월 비용:      $5.00 (약 ₩6,500)                   │
│                                                         │
│  💡 첫 3개월 무료!                                     │
└─────────────────────────────────────────────────────────┘

비용 절감 팁:
• Lightsail은 고정 가격이라 예상치 못한 비용 없음
• 사용하지 않을 때는 인스턴스 중지 가능
• 스냅샷으로 백업 후 재생성 가능


═══════════════════════════════════════════════════════════

📞 지원 및 도움말

【AWS 문서】
https://docs.aws.amazon.com/lightsail/

【Django 문서】
https://docs.djangoproject.com/

【Next.js 문서】
https://nextjs.org/docs

【React Native 문서】
https://reactnative.dev/docs


═══════════════════════════════════════════════════════════

✅ 체크리스트

배포 전 준비:
□ AWS 계정 생성
□ 신용카드 등록
□ GitHub에 코드 푸시

AWS Lightsail 설정:
□ 인스턴스 생성 ($5 플랜)
□ Ubuntu 22.04 LTS 선택
□ 방화벽 포트 열기 (80, 443, 8000)
□ 고정 IP 할당
□ IP 주소 메모

배포 실행:
□ SSH 접속
□ Git clone으로 코드 다운로드
□ deploy_to_aws.sh 실행
□ 배포 완료 메시지 확인

서비스 설정:
□ Django 관리자 계정 생성
□ 웹사이트 접속 테스트
□ API 접속 테스트
□ 관리자 페이지 접속 테스트

앱 업데이트:
□ API URL 변경
□ APK 재빌드
□ 앱 설치
□ 앱 접속 테스트


═══════════════════════════════════════════════════════════

🎉 축하합니다!

펌피 앱이 AWS 클라우드에서 성공적으로 실행됩니다!

이제 여러분의 헬스장 회원들이 언제 어디서든
앱을 사용할 수 있습니다! 💪


═══════════════════════════════════════════════════════════

작성 일시: 2025-10-15
버전: 1.0
예상 소요 시간: 30분
난이도: ⭐⭐ 보통
월 비용: $5 (첫 3개월 무료)








