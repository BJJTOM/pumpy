╔═══════════════════════════════════════════════════════════╗
║                                                           ║
║     ✅ 1단계 완료! GitHub 푸시 성공!                      ║
║                                                           ║
╚═══════════════════════════════════════════════════════════╝


축하합니다! GitHub에 코드가 성공적으로 업로드되었습니다! 🎉

GitHub 저장소: https://github.com/BJJTOM/pumpy


═══════════════════════════════════════════════════════════

🎯 이제 AWS 설정만 하면 끝입니다!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

예상 소요 시간: 20분


【2단계】 AWS EC2 인스턴스 생성 (10분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. AWS 콘솔 접속:
   👉 https://console.aws.amazon.com/

2. 로그인

3. 상단 검색창에 "EC2" 입력 → 클릭

4. 우측 상단에서 리전 확인:
   "Asia Pacific (Seoul) ap-northeast-2"

5. 주황색 "Launch instances" 버튼 클릭

6. 다음 설정 입력:

   ┌─────────────────────────────────────────────────────┐
   │ 1. Name and tags                                   │
   │    Name: pumpy-server                              │
   │                                                     │
   │ 2. Application and OS Images                       │
   │    Quick Start: Ubuntu                             │
   │    Ubuntu Server 22.04 LTS (HVM)                   │
   │    Architecture: 64-bit (x86)                      │
   │                                                     │
   │ 3. Instance type                                   │
   │    t2.micro                                        │
   │    ✅ Free tier eligible                           │
   │                                                     │
   │ 4. Key pair (login)                                │
   │    "Create new key pair" 클릭                      │
   │    ┌───────────────────────────┐                   │
   │    │ Name: pumpy-key          │                   │
   │    │ Type: RSA                │                   │
   │    │ Format: .pem             │                   │
   │    └───────────────────────────┘                   │
   │    "Create key pair" 클릭                          │
   │    → pumpy-key.pem 파일 자동 다운로드             │
   │                                                     │
   │ 5. Network settings                                │
   │    "Edit" 버튼 클릭                                │
   │    "Add security group rule" 클릭하여 다음 추가:   │
   │    ┌──────────────────────────────────┐            │
   │    │ Type          Port    Source    │            │
   │    ├──────────────────────────────────┤            │
   │    │ SSH           22      0.0.0.0/0 │            │
   │    │ HTTP          80      0.0.0.0/0 │            │
   │    │ HTTPS         443     0.0.0.0/0 │            │
   │    │ Custom TCP    8000    0.0.0.0/0 │            │
   │    └──────────────────────────────────┘            │
   │                                                     │
   │ 6. Configure storage                               │
   │    30 GiB gp3 (기본값)                             │
   │                                                     │
   │ 7. Summary                                         │
   │    Number of instances: 1                          │
   │    ✅ Free tier eligible 확인                      │
   │                                                     │
   └─────────────────────────────────────────────────────┘

7. "Launch instance" 버튼 클릭!

8. "View all instances" 클릭

9. 인스턴스 상태가 "Running"이 될 때까지 대기 (약 1-2분)


【3단계】 Elastic IP 할당 (3분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 좌측 메뉴에서:
   "Network & Security" → "Elastic IPs" 클릭

2. "Allocate Elastic IP address" 버튼 클릭

3. 그대로 "Allocate" 클릭

4. 생성된 Elastic IP 주소 선택 (체크박스 클릭)

5. "Actions" 드롭다운 → "Associate Elastic IP address" 클릭

6. 다음 선택:
   ┌─────────────────────────────────────────────────────┐
   │ Resource type: Instance                            │
   │ Instance: pumpy-server 선택                        │
   │ Private IP address: 자동으로 선택됨                │
   └─────────────────────────────────────────────────────┘

7. "Associate" 버튼 클릭

8. 📝 할당된 Elastic IP 주소를 메모하세요!
   예: 13.124.123.456

   ┌─────────────────────────────────────────────────────┐
   │                                                     │
   │  내 Elastic IP:  _____________________             │
   │                                                     │
   └─────────────────────────────────────────────────────┘


【4단계】 SSH 접속 및 자동 배포 (15분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PowerShell을 새로 열고 다음 명령어 실행:

1. 다운로드한 키 파일 위치로 이동:
   ┌─────────────────────────────────────────────────────┐
   │ cd C:\Users\guddn\Downloads                        │
   └─────────────────────────────────────────────────────┘

2. SSH 접속:
   ┌─────────────────────────────────────────────────────┐
   │ ssh -i pumpy-key.pem ubuntu@YOUR_ELASTIC_IP        │
   └─────────────────────────────────────────────────────┘

   ⚠️ YOUR_ELASTIC_IP를 실제 IP로 변경!
   예: ssh -i pumpy-key.pem ubuntu@13.124.123.456

   처음 접속 시 나오는 메시지:
   "Are you sure you want to continue connecting (yes/no)?"
   → yes 입력하고 Enter

3. 서버 접속 완료! 이제 다음 명령어를 하나씩 실행:

   ┌─────────────────────────────────────────────────────┐
   │ # 1. 홈 디렉토리로 이동                            │
   │ cd /home/ubuntu                                    │
   │                                                     │
   │ # 2. GitHub에서 코드 다운로드                      │
   │ git clone https://github.com/BJJTOM/pumpy.git     │
   │                                                     │
   │ # 3. 프로젝트 폴더로 이동                          │
   │ cd pumpy                                           │
   │                                                     │
   │ # 4. 배포 스크립트에 실행 권한 부여                │
   │ chmod +x deploy_to_aws.sh                          │
   │                                                     │
   │ # 5. 자동 배포 실행!                               │
   │ ./deploy_to_aws.sh                                 │
   └─────────────────────────────────────────────────────┘

4. 자동 배포 시작! ⏱️ 약 15분 소요

   ☕ 커피 한 잔 하고 오세요!

   스크립트가 자동으로 다음을 수행:
   ✅ [1/10] 시스템 업데이트
   ✅ [2/10] Python, Node.js, Nginx 설치
   ✅ [3/10] 프로젝트 디렉토리 설정
   ✅ [4/10] PostgreSQL 데이터베이스 생성
   ✅ [5/10] Django 백엔드 설정
   ✅ [6/10] Gunicorn 서비스 시작
   ✅ [7/10] Next.js 프론트엔드 빌드
   ✅ [8/10] Nginx 웹서버 설정
   ✅ [9/10] 방화벽 설정
   ✅ [10/10] 서비스 상태 확인

5. 완료 메시지가 표시되면:
   ┌─────────────────────────────────────────────────────┐
   │ ========================================           │
   │   🎉 배포 완료!                                    │
   │ ========================================           │
   │                                                     │
   │ 웹사이트: http://YOUR_IP/                          │
   │ API:      http://YOUR_IP/api/                      │
   │ 관리자:   http://YOUR_IP/admin/                    │
   │                                                     │
   └─────────────────────────────────────────────────────┘


【5단계】 관리자 계정 생성 (2분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SSH 터미널에서 계속:

┌─────────────────────────────────────────────────────┐
│ cd /home/ubuntu/pumpy/gym_api                      │
│                                                     │
│ source venv/bin/activate                           │
│                                                     │
│ python manage.py createsuperuser                   │
└─────────────────────────────────────────────────────┘

입력 사항:
• Username: admin
• Email: your@email.com
• Password: (안전한 비밀번호 입력)
• Password (again): (재입력)


【6단계】 웹 브라우저에서 접속 테스트 (1분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PC 브라우저에서 다음 주소 접속:

1. 웹사이트: http://YOUR_IP/
   → 펌피 대시보드가 보여야 합니다! ✅

2. API: http://YOUR_IP/api/members/
   → JSON 데이터가 보여야 합니다! ✅

3. 관리자 페이지: http://YOUR_IP/admin/
   → Django 관리자 로그인 화면이 보여야 합니다! ✅


═══════════════════════════════════════════════════════════

🎉 축하합니다! AWS 배포 완료!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

이제 펌피 앱이 AWS 클라우드에서 실행됩니다!

✅ 12개월 동안 완전 무료!
✅ 24시간 365일 실행
✅ 어디서든 접속 가능
✅ PC 꺼도 됨!


═══════════════════════════════════════════════════════════

📱 다음 단계: 앱 설정 (선택사항)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

React Native 앱의 API URL을 AWS 서버로 변경하려면:

1. PumpyApp\src\utils\api.ts 수정
2. PumpyApp\src\screens\ServerConfigScreen.tsx 수정
3. APK 재빌드

자세한 방법은 "📱_단3단계로_끝내기.txt" 파일 참조!


═══════════════════════════════════════════════════════════

💰 비용 (AWS 프리티어)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

12개월 동안:
• EC2 인스턴스 (t2.micro): $0
• EBS 스토리지 (30GB): $0
• 데이터 전송 (15GB/월): $0
• Elastic IP: $0

총: $0/월 🆓

12개월 후: 약 $10/월


═══════════════════════════════════════════════════════════

📝 서버 정보 기록

┌─────────────────────────────────────────────────────────┐
│  펌피 AWS 서버 정보                                     │
├─────────────────────────────────────────────────────────┤
│  Elastic IP:  _____________________                     │
│  웹사이트:    http://____________/                      │
│  API:         http://____________/api/                  │
│  관리자:      http://____________/admin/                │
│                                                         │
│  SSH 접속:    ssh -i pumpy-key.pem ubuntu@________     │
│                                                         │
│  데이터베이스:                                          │
│  • 이름: pumpy_db                                       │
│  • 사용자: pumpy_user                                   │
│  • 비밀번호: PumpySecure2025!                           │
│                                                         │
│  배포 일시:   ____________________                      │
└─────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════

🆘 문제가 발생하면?
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SSH 접속 안 됨:
→ 보안 그룹에서 SSH(22) 포트 확인
→ 키 파일 경로 확인

웹사이트 안 열림:
→ sudo systemctl status nginx
→ sudo systemctl status gunicorn

502 Bad Gateway:
→ sudo systemctl restart gunicorn
→ sudo systemctl restart nginx


═══════════════════════════════════════════════════════════

🎯 다음 단계

1. AWS EC2 인스턴스 생성
   → https://console.aws.amazon.com/

2. Elastic IP 할당

3. SSH 접속 및 자동 배포
   → ./deploy_to_aws.sh

4. 완료! 🎉


═══════════════════════════════════════════════════════════

지금 시작하세요!
👉 https://console.aws.amazon.com/











