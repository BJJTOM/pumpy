# Generated by Django 5.2.7 on 2025-10-14 15:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='이름')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('specialty', models.CharField(blank=True, max_length=200, verbose_name='전문 분야')),
                ('bio', models.TextField(blank=True, verbose_name='소개')),
            ],
            options={
                'verbose_name': '코치',
                'verbose_name_plural': '코치',
            },
        ),
        migrations.CreateModel(
            name='MembershipPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='상품명')),
                ('category', models.CharField(choices=[('일반', '일반 회원권'), ('다이어트', '다이어트 프로그램'), ('실전반', '실전반'), ('하드트레이닝', '하드 트레이닝'), ('키즈', '키즈 클래스'), ('PT', '개인 레슨'), ('그룹', '그룹 수업')], default='일반', max_length=20, verbose_name='카테고리')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='가격')),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='정가')),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='기간(일)')),
                ('duration_months', models.PositiveIntegerField(blank=True, null=True, verbose_name='기간(개월)')),
                ('visits', models.PositiveIntegerField(blank=True, null=True, verbose_name='총 횟수')),
                ('period_type', models.CharField(choices=[('일반', '일반 (횟수 제한 없음)'), ('횟수제', '횟수제'), ('주_2회', '주 2회 기준'), ('주_3회', '주 3회 기준'), ('주_4-6회', '주 4-6회 (매일)')], default='일반', max_length=20, verbose_name='수련 주기')),
                ('weekly_limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='주간 제한 횟수')),
                ('discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='할인율(%)')),
                ('continuous_discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='연속 등록 할인율(%)')),
                ('family_discount', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='가족/형제 할인율(%)')),
                ('includes_uniform', models.BooleanField(default=False, verbose_name='도복 포함')),
                ('includes_rashguard', models.BooleanField(default=False, verbose_name='레시가드 포함')),
                ('includes_locker', models.BooleanField(default=False, verbose_name='락커 포함')),
                ('includes_towel', models.BooleanField(default=False, verbose_name='수건 포함')),
                ('includes_gear', models.BooleanField(default=False, verbose_name='용품 포함')),
                ('class_times', models.TextField(blank=True, verbose_name='수업 시간대 (JSON 형식)')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('is_popular', models.BooleanField(default=False, verbose_name='인기 상품')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='표시 순서')),
                ('description', models.TextField(blank=True, verbose_name='상세 설명')),
                ('notes', models.TextField(blank=True, verbose_name='비고')),
                ('total_sales', models.PositiveIntegerField(default=0, verbose_name='총 판매 수')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='현재 이용자 수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
            ],
            options={
                'verbose_name': '회원권',
                'verbose_name_plural': '회원권들',
                'ordering': ['display_order', '-is_popular', 'category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='이름')),
                ('last_name', models.CharField(max_length=50, verbose_name='성')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='이메일')),
                ('address', models.CharField(blank=True, max_length=200, verbose_name='주소')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='생년월일')),
                ('gender', models.CharField(blank=True, choices=[('남', '남'), ('여', '여'), ('기타', '기타')], max_length=10, verbose_name='성별')),
                ('photo', models.TextField(blank=True, verbose_name='프로필 사진 URL')),
                ('status', models.CharField(choices=[('대기', '승인대기'), ('활성', '활성'), ('정지', '정지'), ('해지', '해지')], default='대기', max_length=10, verbose_name='상태')),
                ('is_approved', models.BooleanField(default=False, verbose_name='승인 여부')),
                ('join_date', models.DateField(auto_now_add=True, verbose_name='가입일')),
                ('expire_date', models.DateField(blank=True, null=True, verbose_name='만료일')),
                ('remaining_visits', models.PositiveIntegerField(blank=True, null=True, verbose_name='잔여 횟수')),
                ('total_attendance_days', models.PositiveIntegerField(default=0, verbose_name='총 출석일수')),
                ('last_visit_date', models.DateField(blank=True, null=True, verbose_name='최근 방문일')),
                ('last_visit_time', models.TimeField(blank=True, null=True, verbose_name='최근 방문시간')),
                ('current_level', models.CharField(blank=True, choices=[('1단', '1단'), ('2단', '2단'), ('3단', '3단'), ('4단', '4단'), ('5단', '5단'), ('6단', '6단'), ('7단', '7단'), ('8단', '8단'), ('9단', '9단'), ('10단', '10단'), ('초보', '초보'), ('중급', '중급'), ('고급', '고급')], max_length=20, verbose_name='현재 단수')),
                ('level_date', models.DateField(blank=True, null=True, verbose_name='단수 취득일')),
                ('points', models.IntegerField(default=0, verbose_name='포인트')),
                ('payment_day', models.PositiveIntegerField(blank=True, null=True, verbose_name='정기 결제일')),
                ('next_billing', models.DateField(blank=True, null=True, verbose_name='다음 결제 예정일')),
                ('discount_allowed', models.BooleanField(default=True, verbose_name='할인 적용 가능')),
                ('terms_agreed', models.BooleanField(default=False, verbose_name='이용약관 동의')),
                ('terms_agreed_date', models.DateTimeField(blank=True, null=True, verbose_name='이용약관 동의일')),
                ('privacy_agreed', models.BooleanField(default=False, verbose_name='개인정보처리방침 동의')),
                ('privacy_agreed_date', models.DateTimeField(blank=True, null=True, verbose_name='개인정보 동의일')),
                ('marketing_agreed', models.BooleanField(default=False, verbose_name='마케팅 수신 동의')),
                ('marketing_agreed_date', models.DateTimeField(blank=True, null=True, verbose_name='마케팅 동의일')),
                ('contract_text', models.TextField(blank=True, verbose_name='계약서 내용')),
                ('contract_date', models.DateField(blank=True, null=True, verbose_name='계약일')),
                ('contract_file_url', models.TextField(blank=True, verbose_name='계약서 파일 URL')),
                ('notes', models.TextField(blank=True, verbose_name='특이사항/메모')),
                ('medical_notes', models.TextField(blank=True, verbose_name='건강 특이사항')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, verbose_name='긴급 연락처')),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=50, verbose_name='긴급 연락처 관계')),
                ('locker_number', models.CharField(blank=True, max_length=20, verbose_name='락커 번호')),
                ('locker_expire_date', models.DateField(blank=True, null=True, verbose_name='락커 만료일')),
                ('referrer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member', verbose_name='추천인')),
                ('current_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.membershipplan', verbose_name='현재 회원권')),
            ],
            options={
                'verbose_name': '회원',
                'verbose_name_plural': '회원들',
                'ordering': ['-join_date'],
            },
        ),
        migrations.CreateModel(
            name='MealLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('meal_type', models.CharField(choices=[('breakfast', '아침'), ('lunch', '점심'), ('dinner', '저녁'), ('snack', '간식')], max_length=20, verbose_name='식사 유형')),
                ('food_name', models.CharField(max_length=200, verbose_name='음식명')),
                ('calories', models.PositiveIntegerField(default=0, verbose_name='칼로리')),
                ('protein', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='단백질(g)')),
                ('carbs', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='탄수화물(g)')),
                ('fat', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='지방(g)')),
                ('photo_url', models.TextField(blank=True, verbose_name='사진 URL')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meal_logs', to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '식단 기록',
                'verbose_name_plural': '식단 기록들',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no', models.CharField(max_length=20, unique=True, verbose_name='락커 번호')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='시작일')),
                ('expire_date', models.DateField(blank=True, null=True, verbose_name='만료일')),
                ('is_available', models.BooleanField(default=True, verbose_name='사용 가능')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member', verbose_name='사용 회원')),
            ],
            options={
                'verbose_name': '락커',
                'verbose_name_plural': '락커',
                'ordering': ['no'],
            },
        ),
        migrations.CreateModel(
            name='LevelHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_level', models.CharField(blank=True, max_length=20, verbose_name='이전 단수')),
                ('new_level', models.CharField(max_length=20, verbose_name='새 단수')),
                ('date', models.DateField(auto_now_add=True, verbose_name='변경일')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='level_history', to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '단수 이력',
                'verbose_name_plural': '단수 이력',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='쿠폰 코드')),
                ('discount_percent', models.PositiveIntegerField(default=0, verbose_name='할인율(%)')),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='할인 금액')),
                ('valid_from', models.DateField(verbose_name='유효 시작일')),
                ('valid_until', models.DateField(verbose_name='유효 종료일')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('used_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member', verbose_name='사용한 회원')),
            ],
            options={
                'verbose_name': '쿠폰',
                'verbose_name_plural': '쿠폰',
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('direct', '1:1 채팅'), ('group', '그룹 채팅')], default='direct', max_length=20, verbose_name='방 유형')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='방 이름')),
                ('last_message', models.TextField(blank=True, verbose_name='마지막 메시지')),
                ('last_message_at', models.DateTimeField(blank=True, null=True, verbose_name='마지막 메시지 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('members', models.ManyToManyField(related_name='chat_rooms', to='members.member', verbose_name='참여자')),
            ],
            options={
                'verbose_name': '채팅방',
                'verbose_name_plural': '채팅방들',
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('text', '텍스트'), ('image', '이미지'), ('file', '파일'), ('system', '시스템')], default='text', max_length=20, verbose_name='메시지 유형')),
                ('content', models.TextField(verbose_name='내용')),
                ('file_url', models.TextField(blank=True, verbose_name='파일 URL')),
                ('is_read', models.BooleanField(default=False, verbose_name='읽음')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='읽은 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='전송 시간')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='members.chatroom', verbose_name='채팅방')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='members.member', verbose_name='발신자')),
            ],
            options={
                'verbose_name': '채팅 메시지',
                'verbose_name_plural': '채팅 메시지들',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('time', models.TimeField(verbose_name='시간')),
                ('status', models.CharField(choices=[('출석', '출석'), ('지각', '지각'), ('결석', '결석')], default='출석', max_length=10, verbose_name='상태')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '출석',
                'verbose_name_plural': '출석 기록',
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='MemberNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('note_type', models.CharField(choices=[('상담', '상담'), ('전화', '전화'), ('문자', '문자'), ('일반', '일반'), ('주의', '주의')], default='일반', max_length=50, verbose_name='유형')),
                ('content', models.TextField(verbose_name='내용')),
                ('author', models.CharField(blank=True, max_length=100, verbose_name='작성자')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_notes', to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '회원 메모',
                'verbose_name_plural': '회원 메모',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('like', '좋아요'), ('comment', '댓글'), ('mention', '멘션'), ('follow', '팔로우'), ('message', '메시지'), ('workout', '운동'), ('system', '시스템')], max_length=20, verbose_name='알림 유형')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('content', models.TextField(verbose_name='내용')),
                ('link', models.CharField(blank=True, max_length=500, verbose_name='링크')),
                ('is_read', models.BooleanField(default=False, verbose_name='읽음')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='읽은 시간')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='members.member', verbose_name='수신자')),
            ],
            options={
                'verbose_name': '알림',
                'verbose_name_plural': '알림들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='내용')),
                ('images', models.TextField(blank=True, verbose_name='이미지 URLs (JSON)')),
                ('tags', models.TextField(blank=True, verbose_name='태그')),
                ('like_count', models.PositiveIntegerField(default=0, verbose_name='좋아요 수')),
                ('comment_count', models.PositiveIntegerField(default=0, verbose_name='댓글 수')),
                ('share_count', models.PositiveIntegerField(default=0, verbose_name='공유 수')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='조회 수')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='고정됨')),
                ('is_public', models.BooleanField(default=True, verbose_name='공개')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='members.member', verbose_name='작성자')),
            ],
            options={
                'verbose_name': '게시글',
                'verbose_name_plural': '게시글들',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='내용')),
                ('like_count', models.PositiveIntegerField(default=0, verbose_name='좋아요 수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='members.comment', verbose_name='부모 댓글')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='members.member', verbose_name='작성자')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='members.post', verbose_name='게시글')),
            ],
            options={
                'verbose_name': '댓글',
                'verbose_name_plural': '댓글들',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='금액')),
                ('date', models.DateField(verbose_name='날짜')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='출처')),
                ('memo', models.TextField(blank=True, verbose_name='메모')),
                ('member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '매출',
                'verbose_name_plural': '매출 기록',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.TextField(verbose_name='이미지 URL')),
                ('content', models.TextField(blank=True, verbose_name='내용')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='조회 수')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='작성일')),
                ('expires_at', models.DateTimeField(verbose_name='만료일')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='members.member', verbose_name='작성자')),
            ],
            options={
                'verbose_name': '스토리',
                'verbose_name_plural': '스토리들',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='시작일')),
                ('end_date', models.DateField(verbose_name='종료일')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='결제 금액')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성화')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='members.member', verbose_name='회원')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.membershipplan', verbose_name='회원권')),
            ],
            options={
                'verbose_name': '구독',
                'verbose_name_plural': '구독 내역',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_character_url', models.TextField(blank=True, verbose_name='AI 캐릭터 이미지 URL')),
                ('character_style', models.CharField(default='realistic', max_length=50, verbose_name='캐릭터 스타일')),
                ('bio', models.TextField(blank=True, verbose_name='자기소개')),
                ('instagram', models.CharField(blank=True, max_length=100, verbose_name='인스타그램')),
                ('goal_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='목표 체중')),
                ('goal_type', models.CharField(blank=True, max_length=50, verbose_name='목표 유형')),
                ('is_public', models.BooleanField(default=True, verbose_name='프로필 공개')),
                ('allow_messages', models.BooleanField(default=True, verbose_name='메시지 허용')),
                ('push_enabled', models.BooleanField(default=True, verbose_name='푸시 알림')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='members.member', verbose_name='회원')),
            ],
            options={
                'verbose_name': '회원 프로필',
                'verbose_name_plural': '회원 프로필들',
            },
        ),
        migrations.CreateModel(
            name='WOD',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('title', models.CharField(max_length=200, verbose_name='제목')),
                ('description', models.TextField(verbose_name='설명')),
                ('coach', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.coach', verbose_name='담당 코치')),
            ],
            options={
                'verbose_name': 'WOD',
                'verbose_name_plural': 'WOD',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='날짜')),
                ('duration_minutes', models.PositiveIntegerField(default=0, verbose_name='운동 시간(분)')),
                ('calories_burned', models.PositiveIntegerField(default=0, verbose_name='소모 칼로리')),
                ('exercises', models.TextField(blank=True, verbose_name='운동 내용')),
                ('notes', models.TextField(blank=True, verbose_name='메모')),
                ('feeling', models.CharField(blank=True, max_length=20, verbose_name='컨디션')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workout_logs', to='members.member', verbose_name='회원')),
                ('wod', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='members.wod', verbose_name='오늘의 운동')),
            ],
            options={
                'verbose_name': '운동 기록',
                'verbose_name_plural': '운동 기록들',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='members.comment', verbose_name='댓글')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='members.member', verbose_name='회원')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='members.post', verbose_name='게시글')),
            ],
            options={
                'verbose_name': '좋아요',
                'verbose_name_plural': '좋아요들',
                'unique_together': {('member', 'comment'), ('member', 'post')},
            },
        ),
    ]
