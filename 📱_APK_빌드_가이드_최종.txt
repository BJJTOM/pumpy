=====================================================
   📱 펌피 React Native APK 빌드 가이드
=====================================================

React Native 앱을 APK로 빌드하는 3가지 방법을 안내합니다.


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   방법 1: Expo Go 사용 (즉시 사용 가능) ⭐ 추천
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

가장 빠르고 쉬운 방법입니다!

1. Play Store에서 "Expo Go" 설치
   https://play.google.com/store/apps/details?id=host.exp.exponent

2. 컴퓨터에서 앱 서버 시작:
   cd C:\Users\guddn\Downloads\COCO\pumpy-mobile
   npx expo start

3. QR 코드 스캔 또는 URL 입력

4. 완료!

✅ 장점:
   - 설치 불필요
   - 즉시 사용 가능
   - 코드 수정 시 자동 업데이트

❌ 단점:
   - Expo Go 앱 필요
   - 인터넷 연결 필요 (서버와 통신)


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   방법 2: EAS Build (클라우드 빌드) 🌐
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Expo의 클라우드 빌드 서비스 사용

1. Expo 계정 생성
   https://expo.dev/signup

2. EAS CLI로 로그인:
   cd C:\Users\guddn\Downloads\COCO\pumpy-mobile
   eas login

3. 프로젝트 설정:
   eas build:configure

4. APK 빌드:
   eas build --platform android --profile preview

5. 빌드 완료 후 다운로드 (15~20분 소요)

6. APK를 스마트폰에 설치

✅ 장점:
   - 로컬 환경 설정 불필요
   - 안정적인 빌드
   - 배포 준비 완료

❌ 단점:
   - Expo 계정 필요
   - 빌드 시간 소요
   - 무료 플랜: 월 30회 제한


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   방법 3: 로컬 빌드 (고급) 🔧
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

로컬 컴퓨터에서 직접 빌드

필요사항:
- Android Studio
- Java JDK 17+
- Android SDK
- Gradle

단계:

1. 네이티브 프로젝트 생성:
   cd C:\Users\guddn\Downloads\COCO\pumpy-mobile
   npx expo prebuild --platform android

2. JAVA_HOME 설정:
   $env:JAVA_HOME="C:\Program Files\Microsoft\jdk-17.0.16.8-hotspot"

3. APK 빌드:
   cd android
   .\gradlew assembleRelease

4. APK 위치:
   android\app\build\outputs\apk\release\app-release.apk

⚠️ 주의:
   - Expo 플러그인 설정이 복잡할 수 있음
   - Java/Android SDK 버전 호환성 문제 가능
   - 빌드 오류 해결에 시간 소요


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   🎯 추천 방법
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

💡 테스트 목적:
   → 방법 1 (Expo Go) 사용
   - 가장 빠르고 쉬움
   - 즉시 사용 가능

💡 실제 배포:
   → 방법 2 (EAS Build) 사용
   - 안정적인 APK 생성
   - Play Store 배포 준비


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   📱 Expo Go 빠른 시작 (1분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Expo Go 설치
   Play Store → "Expo Go" 검색 → 설치

2. 서버 시작
   터미널 1 (백엔드):
   cd gym_api
   python manage.py runserver 0.0.0.0:8000

   터미널 2 (앱):
   cd pumpy-mobile
   npx expo start

3. QR 스캔
   Expo Go 앱 실행 → "Scan QR code"

4. 서버 설정
   - CMD에서 ipconfig 실행
   - IPv4 주소 확인
   - 앱에 입력: http://YOUR_IP:3000

5. 완료!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   🌐 외부 접속 (ngrok 사용)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

다른 Wi-Fi에서도 사용하려면:

1. ngrok 설치 및 실행:
   ngrok http 3000

2. ngrok URL 확인:
   예: https://abc123.ngrok-free.app

3. 앱의 서버 설정에 입력

4. 어디서든 사용 가능!


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   🔧 EAS Build 상세 가이드
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1단계: Expo 계정 생성
   https://expo.dev/signup
   - 이메일로 가입
   - 무료 플랜 선택

2단계: 로그인
   cd C:\Users\guddn\Downloads\COCO\pumpy-mobile
   eas login
   - 이메일 입력
   - 비밀번호 입력

3단계: 프로젝트 초기화
   eas build:configure
   - "All" 선택 (Android + iOS)
   - eas.json 파일 자동 생성

4단계: APK 빌드
   eas build --platform android --profile preview
   
   질문 답변:
   - "Generate a new keystore?" → Yes
   - "Project name?" → pumpy-mobile
   
   빌드 시작!

5단계: 빌드 진행 확인
   - 터미널에 빌드 URL 표시
   - 브라우저에서 진행 상황 확인
   - 약 15~20분 소요

6단계: APK 다운로드
   - 빌드 완료 후 다운로드 링크 제공
   - APK 파일 다운로드

7단계: 스마트폰에 설치
   - APK 파일을 스마트폰으로 전송
   - "출처를 알 수 없는 앱" 설치 허용
   - APK 파일 실행 → 설치

8단계: 완료!
   - 앱 아이콘 확인
   - 실행 및 테스트


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   💰 비용 비교
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Expo Go:
   - 완전 무료
   - 무제한 사용

EAS Build:
   - 무료: 월 30회 빌드
   - $29/월: 무제한 빌드

로컬 빌드:
   - 완전 무료
   - 설정 시간 소요


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   🐛 문제 해결
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Q: Expo Go에서 "Unable to connect" 오류
A: 1. 백엔드가 실행 중인지 확인
   2. 같은 Wi-Fi에 연결되어 있는지 확인
   3. 방화벽에서 8000, 3000번 포트 허용

Q: EAS Build 로그인 실패
A: 1. 이메일과 비밀번호 확인
   2. 인터넷 연결 확인
   3. https://expo.dev 에서 직접 로그인 테스트

Q: APK 설치 시 "설치가 차단됨"
A: 설정 → 보안 → "출처를 알 수 없는 앱" 허용

Q: 로컬 빌드 오류
A: 1. Java 버전 확인 (17+)
   2. Android SDK 설치 확인
   3. Gradle 버전 호환성 확인


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   ✅ 현재 상태
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ React Native 앱 개발 완료
✅ 모든 소스 코드 준비됨
✅ 아이콘 파일 생성됨 (PNG)
✅ EAS 설정 파일 생성됨 (eas.json)
✅ Expo 서버 실행 가능
✅ EAS CLI 설치됨

📱 즉시 사용 가능:
   cd pumpy-mobile
   npx expo start
   → Expo Go로 QR 스캔

🏗️ APK 빌드 가능:
   eas login
   eas build --platform android --profile preview


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
   🎉 결론
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ 방법 1 (Expo Go): 지금 즉시 사용 가능!
   → 테스트와 개발에 완벽

✅ 방법 2 (EAS Build): APK 빌드 준비 완료!
   → 실제 배포에 적합

✅ 방법 3 (로컬 빌드): 가능하지만 복잡
   → 고급 사용자용

추천: Expo Go로 먼저 테스트하고,
      만족하면 EAS Build로 APK 생성!


문의사항이 있으시면 언제든지 물어보세요! 😊


=====================================================
작성일: 2025년 10월 15일
펌피 (Pumpy) React Native - APK 빌드 가이드
모든 방법 완벽 정리 ✅
=====================================================










