╔═══════════════════════════════════════════════════════════╗
║                                                           ║
║       🔧 접속 문제 해결 - 단계별 확인                     ║
║                                                           ║
╚═══════════════════════════════════════════════════════════╝


【1단계】 서비스 상태 확인
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

SSH 터미널에서 다음 명령어 실행:

sudo systemctl status gunicorn
sudo systemctl status nginx
pm2 status


【2단계】 서비스가 중단되었다면 재시작
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Gunicorn (Django) 재시작
sudo systemctl restart gunicorn

# Nginx 재시작
sudo systemctl restart nginx

# PM2 (Next.js) 재시작
pm2 restart pumpy-web


【3단계】 로그 확인 (에러 메시지 찾기)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# Gunicorn 로그 (최근 50줄)
sudo journalctl -u gunicorn -n 50 --no-pager

# Nginx 에러 로그
sudo tail -n 30 /var/log/nginx/error.log


【4단계】 포트 확인
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

sudo netstat -tlnp | grep -E '80|8000|3000'


【5단계】 방화벽 확인
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

sudo ufw status


【빠른 해결: 모든 서비스 재시작】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

다음 명령어를 전체 복사해서 실행하세요:

sudo systemctl restart gunicorn
sudo systemctl restart nginx
pm2 restart pumpy-web
echo "✅ 모든 서비스 재시작 완료!"
sleep 3
sudo systemctl status gunicorn --no-pager
sudo systemctl status nginx --no-pager
pm2 status


【완전 재배포 (최후의 수단)】
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

cd /home/ubuntu/pumpy
./deploy_to_aws.sh


═══════════════════════════════════════════════════════════

🎯 가장 흔한 원인:

1. Gunicorn 서비스가 중단됨
   → sudo systemctl restart gunicorn

2. Nginx 설정 오류
   → sudo nginx -t
   → sudo systemctl restart nginx

3. 포트가 사용 중
   → sudo systemctl restart gunicorn nginx

4. 방화벽 문제
   → sudo ufw allow 80
   → sudo ufw allow 8000


═══════════════════════════════════════════════════════════

📝 먼저 실행할 명령어:

sudo systemctl restart gunicorn
sudo systemctl restart nginx
pm2 restart pumpy-web

그 다음:

curl http://localhost:8000/admin/
curl http://localhost/admin/


이 명령어를 실행하고 결과를 알려주세요!

═══════════════════════════════════════════════════════════










