╔═══════════════════════════════════════════════════════════╗
║                                                           ║
║         🚀 펌피 AWS 배포 - 단 3단계로 끝내기!            ║
║                                                           ║
╚═══════════════════════════════════════════════════════════╝


제가 최대한 간단하게 만들었습니다!
각 단계에서 필요한 명령어를 모두 준비했습니다.


═══════════════════════════════════════════════════════════

🎯 단계 1: GitHub 저장소 생성 (3분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

아래 링크를 클릭해서 바로 저장소 생성 페이지로 이동:

👉 https://github.com/new

로그인 후 다음만 입력:

┌─────────────────────────────────────────────────────────┐
│                                                         │
│  Repository name*                                       │
│  ┌───────────────────────────────────────┐             │
│  │ pumpy                                 │             │
│  └───────────────────────────────────────┘             │
│                                                         │
│  Description (optional)                                 │
│  ┌───────────────────────────────────────┐             │
│  │ 펌피 - 헬스장 관리 시스템              │             │
│  └───────────────────────────────────────┘             │
│                                                         │
│  ⦿ Public    ○ Private                                │
│                                                         │
│  ☐ Add a README file   (체크 안 함!)                  │
│  ☐ Add .gitignore      (체크 안 함!)                  │
│  ☐ Choose a license    (체크 안 함!)                  │
│                                                         │
│         [  Create repository  ]                         │
│                                                         │
└─────────────────────────────────────────────────────────┘

"Create repository" 버튼 클릭!

완료되면 다음 단계로 이동!


═══════════════════════════════════════════════════════════

🎯 단계 2: 코드 푸시 (2분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

저장소를 생성했으면 아래 명령어를 복사해서 실행!

PowerShell을 열고 다음 명령어를 차례대로 실행:

┌─────────────────────────────────────────────────────────┐
│                                                         │
│  # 1. 디렉토리 이동                                    │
│  cd C:\Users\guddn\Downloads\COCO                      │
│                                                         │
│  # 2. GitHub 원격 저장소 연결                          │
│  git remote add origin https://github.com/BJJTOM/pumpy.git  │
│                                                         │
│  # 3. 브랜치 이름 확인 및 설정                         │
│  git branch -M main                                    │
│                                                         │
│  # 4. 푸시!                                            │
│  git push -u origin main                               │
│                                                         │
└─────────────────────────────────────────────────────────┘

GitHub 로그인 창이 뜨면:
• Email/Username 입력
• Password 또는 Personal Access Token 입력

푸시 완료되면 다음 단계로!


═══════════════════════════════════════════════════════════

🎯 단계 3: AWS 자동 배포 (25분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

이 단계가 핵심입니다! 제가 모든 명령어를 준비했습니다.


【3-1】 AWS EC2 인스턴스 생성 (10분)
─────────────────────────────────────────────

1. https://console.aws.amazon.com/ 접속

2. 로그인

3. 상단 검색창에 "EC2" 입력 → 클릭

4. 우측 상단: Seoul 리전 확인
   (ap-northeast-2)

5. 주황색 "Launch instances" 버튼 클릭

6. 다음 설정:

   Name:
   ┌─────────────────────────┐
   │ pumpy-server           │
   └─────────────────────────┘

   OS:
   ┌─────────────────────────┐
   │ Ubuntu Server 22.04 LTS│
   │ 64-bit (x86)           │
   └─────────────────────────┘

   Instance type:
   ┌─────────────────────────┐
   │ t2.micro               │
   │ ✅ Free tier eligible  │
   └─────────────────────────┘

   Key pair:
   "Create new key pair" 클릭
   ┌─────────────────────────┐
   │ Name: pumpy-key        │
   │ Type: RSA              │
   │ Format: .pem           │
   └─────────────────────────┘
   "Create key pair" 클릭
   → 파일 자동 다운로드됨!

   Network settings:
   "Edit" 클릭 후 다음 규칙 추가:
   ┌──────────────────────────────────┐
   │ Type          Port    Source    │
   ├──────────────────────────────────┤
   │ SSH           22      Anywhere  │
   │ HTTP          80      Anywhere  │
   │ HTTPS         443     Anywhere  │
   │ Custom TCP    8000    Anywhere  │
   └──────────────────────────────────┘

   Storage:
   ┌─────────────────────────┐
   │ 30 GiB gp3             │
   └─────────────────────────┘

7. "Launch instance" 클릭!

8. "View all instances" 클릭

9. 인스턴스 상태가 "Running"이 될 때까지 대기 (약 1분)


【3-2】 Elastic IP 할당 (2분)
─────────────────────────────────────────────

1. 좌측 메뉴: "Network & Security" → "Elastic IPs"

2. "Allocate Elastic IP address" 버튼 클릭

3. 그대로 "Allocate" 클릭

4. 생성된 IP 선택

5. "Actions" → "Associate Elastic IP address"

6. Instance: pumpy-server 선택

7. "Associate" 클릭

8. 📝 할당된 IP 주소를 메모하세요!
   예: 13.124.xxx.xxx


【3-3】 SSH 접속 및 자동 배포 (13분)
─────────────────────────────────────────────

PowerShell을 열고:

1. 다운로드한 키 파일 위치로 이동:
   ┌─────────────────────────────────────────┐
   │ cd C:\Users\guddn\Downloads             │
   └─────────────────────────────────────────┘

2. SSH 접속:
   ┌─────────────────────────────────────────┐
   │ ssh -i pumpy-key.pem ubuntu@YOUR_IP     │
   └─────────────────────────────────────────┘
   
   ⚠️ YOUR_IP를 실제 Elastic IP로 변경!
   예: ssh -i pumpy-key.pem ubuntu@13.124.123.456

   "Are you sure?" → yes 입력

3. 서버 접속 완료! 이제 다음 명령어 실행:

   ┌─────────────────────────────────────────┐
   │ cd /home/ubuntu                         │
   │                                         │
   │ git clone https://github.com/BJJTOM/pumpy.git  │
   │                                         │
   │ cd pumpy                                │
   │                                         │
   │ chmod +x deploy_to_aws.sh               │
   │                                         │
   │ ./deploy_to_aws.sh                      │
   └─────────────────────────────────────────┘

4. 자동 배포 시작! ⏱️ 약 15분 소요

   ☕ 커피 한 잔 하고 오세요!

   스크립트가 자동으로:
   ✅ Python, Node.js 설치
   ✅ Nginx, PostgreSQL 설치
   ✅ 데이터베이스 생성
   ✅ Django 마이그레이션
   ✅ Next.js 빌드
   ✅ 모든 서비스 시작

5. 완료 메시지:
   ┌─────────────────────────────────────────┐
   │ 🎉 배포 완료!                           │
   │                                         │
   │ 웹사이트: http://YOUR_IP/               │
   │ API:      http://YOUR_IP/api/           │
   │ 관리자:   http://YOUR_IP/admin/         │
   └─────────────────────────────────────────┘


【3-4】 관리자 계정 생성 (1분)
─────────────────────────────────────────────

SSH 터미널에서 계속:

┌─────────────────────────────────────────┐
│ cd /home/ubuntu/pumpy/gym_api           │
│                                         │
│ source venv/bin/activate                │
│                                         │
│ python manage.py createsuperuser        │
└─────────────────────────────────────────┘

입력:
• Username: admin
• Email: your@email.com
• Password: (안전한 비밀번호)
• Password (again): (재입력)


═══════════════════════════════════════════════════════════

✅ 완료! 테스트하기
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

PC 브라우저에서 접속:

1. 웹사이트: http://YOUR_IP/
   → 대시보드가 보여야 합니다! ✅

2. API: http://YOUR_IP/api/members/
   → JSON 데이터가 보여야 합니다! ✅

3. 관리자: http://YOUR_IP/admin/
   → 로그인 화면이 보여야 합니다! ✅


═══════════════════════════════════════════════════════════

📱 앱 설정 (추가 5분)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

로컬 PC에서:

1. PumpyApp\src\utils\api.ts 파일 열기

2. 17번째 줄 수정:
   return 'http://YOUR_IP/api';

3. PumpyApp\src\screens\ServerConfigScreen.tsx 파일 열기

4. 35번째 줄 수정:
   setServerUrl('http://YOUR_IP/api');

5. PowerShell에서 APK 빌드:

   ┌─────────────────────────────────────────┐
   │ cd C:\Users\guddn\Downloads\COCO\PumpyApp\android  │
   │                                         │
   │ $env:JAVA_HOME = "C:\Program Files\Microsoft\jdk-21.0.8.9-hotspot"  │
   │                                         │
   │ $env:ANDROID_HOME = "C:\Users\guddn\AppData\Local\Android\Sdk"      │
   │                                         │
   │ .\gradlew assembleRelease               │
   │                                         │
   │ Copy-Item "app\build\outputs\apk\release\app-release.apk" `         │
   │           -Destination "C:\Users\guddn\Downloads\COCO\Pumpy_AWS.apk" │
   └─────────────────────────────────────────┘

6. Pumpy_AWS.apk 파일을 폰에 설치!


═══════════════════════════════════════════════════════════

🎉 축하합니다!
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

펌피 앱이 AWS에서 실행됩니다!

✅ 12개월 동안 완전 무료!
✅ 24시간 365일 실행
✅ 어디서든 접속 가능
✅ PC 꺼도 됨!


═══════════════════════════════════════════════════════════

📝 서버 정보 기록

┌─────────────────────────────────────────────────────────┐
│  펌피 AWS 서버 정보                                     │
├─────────────────────────────────────────────────────────┤
│  Elastic IP:  _____________________                     │
│  웹사이트:    http://____________/                      │
│  API:         http://____________/api/                  │
│  관리자:      http://____________/admin/                │
│                                                         │
│  SSH:         ssh -i pumpy-key.pem ubuntu@________     │
│                                                         │
│  데이터베이스:                                          │
│  • 이름: pumpy_db                                       │
│  • 사용자: pumpy_user                                   │
│  • 비밀번호: PumpySecure2025!                           │
│                                                         │
│  배포 일시:   ____________________                      │
└─────────────────────────────────────────────────────────┘


═══════════════════════════════════════════════════════════

💰 비용 (12개월 프리티어)

인스턴스:      $0 (t2.micro 750시간/월)
스토리지:      $0 (30GB EBS)
데이터 전송:   $0 (15GB/월)
Elastic IP:    $0 (인스턴스 연결 시)

총: $0/월 (12개월간) 🆓

12개월 후: 약 $10/월


═══════════════════════════════════════════════════════════

🆘 도움이 필요하면?

막히는 곳이 있으면 스크린샷과 함께 물어보세요!
제가 즉시 도와드리겠습니다.


═══════════════════════════════════════════════════════════

🎯 요약: 3단계만 기억하세요!

1. GitHub 저장소 생성 → https://github.com/new
2. 코드 푸시 → git push
3. AWS 자동 배포 → ./deploy_to_aws.sh

끝! 🎉


═══════════════════════════════════════════════════════════

작성일: 2025-10-15
예상 소요 시간: 30분
난이도: ⭐⭐ 보통
비용: 12개월 무료!

지금 바로 시작: https://github.com/new








