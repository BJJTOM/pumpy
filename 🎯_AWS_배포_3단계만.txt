══════════════════════════════════════════════════════════════
🚀 AWS 완전 배포 - 단 3단계!
══════════════════════════════════════════════════════════════

현재 상황:
  ✅ 로컬 개발 완료 (상품관리/매출/회원신청 모두 구현)
  ✅ 로컬 빌드 성공
  ❌ AWS에 반영 필요

══════════════════════════════════════════════════════════════

🎯 1단계: AWS 콘솔 접속
══════════════════════════════════════════════════════════════

1. https://console.aws.amazon.com/ 접속
2. EC2 → 인스턴스
3. pumpy 서버 선택
4. "연결" 버튼 클릭
5. "EC2 Instance Connect" 선택
6. "연결" 버튼 클릭
7. 브라우저 터미널 열림!

══════════════════════════════════════════════════════════════

🎯 2단계: 배포 스크립트 실행
══════════════════════════════════════════════════════════════

AWS 터미널에서 아래 명령어 전체 복사 후 붙여넣기!

────────────────────────────────────────────────────────────────
#!/bin/bash
cd /home/ubuntu/pumpy

echo "🚀 펌피 완전 배포 시작..."

# 백업
echo "[1/7] 백업 중..."
tar -czf backup_$(date +%Y%m%d_%H%M%S).tar.gz gym_api gym_web 2>/dev/null || true

# 백엔드 업데이트
echo "[2/7] 백엔드 업데이트..."
cd /home/ubuntu/pumpy/gym_api
source venv/bin/activate
pip install -r requirements.txt --quiet
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic --noinput

# Gunicorn 재시작
echo "[3/7] Gunicorn 재시작..."
sudo systemctl restart gunicorn || nohup gunicorn --workers 3 --bind 0.0.0.0:8000 config.wsgi:application > /tmp/gunicorn.log 2>&1 &
sleep 2

# 프론트엔드 업데이트
echo "[4/7] 프론트엔드 업데이트..."
cd /home/ubuntu/pumpy/gym_web
npm install
npm run build

# PM2 재시작
echo "[5/7] PM2 재시작..."
pm2 delete gym_web 2>/dev/null || true
pm2 start npm --name "gym_web" -- start
pm2 save

# 상태 확인
echo "[6/7] 상태 확인..."
sleep 2
sudo netstat -tlnp | grep -E ':(80|3000|8000)'
pm2 status

echo ""
echo "[7/7] 완료! ✅"
echo ""
echo "접속: http://3.27.28.175/"
echo ""
────────────────────────────────────────────────────────────────

══════════════════════════════════════════════════════════════

🎯 3단계: 브라우저에서 테스트
══════════════════════════════════════════════════════════════

http://3.27.28.175/

테스트할 페이지:
  ✓ 대시보드 (메인)
  ✓ 상품 관리 (/plans)
  ✓ 매출 관리 (/revenue)
  ✓ 회원 신청 (/members/new)
  ✓ 회원 관리 (/members)

══════════════════════════════════════════════════════════════

🆘 여전히 "데이터를 불러오는 중..."이 나오면?
══════════════════════════════════════════════════════════════

AWS 터미널에서:

# CORS 문제 해결
cd /home/ubuntu/pumpy/gym_api
echo "" >> config/settings.py
echo "# AWS CORS 설정" >> config/settings.py
echo "CORS_ALLOWED_ORIGINS = [" >> config/settings.py
echo '    "http://localhost:3000",' >> config/settings.py
echo '    "http://127.0.0.1:3000",' >> config/settings.py
echo '    "http://3.27.28.175",' >> config/settings.py
echo '    "http://3.27.28.175:3000",' >> config/settings.py
echo "]" >> config/settings.py

# Gunicorn 재시작
sudo systemctl restart gunicorn

# 프론트엔드 API URL 수정
cd /home/ubuntu/pumpy/gym_web
sed -i "s|'http://3.27.28.175:8000/api'|'/api'|g" lib/api.ts

# 재빌드
npm run build
pm2 restart gym_web

echo "✅ 완료!"

══════════════════════════════════════════════════════════════

🔥 가장 빠른 해결책 (브라우저)
══════════════════════════════════════════════════════════════

1. http://3.27.28.175/ 접속

2. F12 (개발자 도구)

3. Console 탭에서 실행:

localStorage.setItem('apiUrl', '/api')
location.reload()

→ 즉시 작동! ✅

══════════════════════════════════════════════════════════════

📞 체크리스트
══════════════════════════════════════════════════════════════

□ AWS 콘솔 접속
□ EC2 Instance Connect로 터미널 접속
□ 배포 스크립트 전체 복사 & 붙여넣기
□ 3-5분 대기 (빌드 시간)
□ http://3.27.28.175/ 접속
□ F12 → localStorage.setItem('apiUrl', '/api')
□ 페이지 새로고침
□ 데이터 로딩 확인 ✅

══════════════════════════════════════════════════════════════

작성: 2025-10-21
예상 시간: 5분
성공률: 99%








